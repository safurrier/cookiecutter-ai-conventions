[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "cookiecutter-ai-conventions"
dynamic = ["version"]
description = "A framework for growing your own AI coding conventions"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
keywords = ["cookiecutter", "ai", "conventions", "claude", "development"]
authors = [
  { name = "Your Name", email = "your.email@example.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dependencies = [
  "cookiecutter>=2.0.0",
  "textual>=0.40.0",
  "jinja2>=3.0.0",
  "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
  "pytest>=7.0.0",
  "pytest-cov>=4.0.0",
  "pytest-cookies>=0.7.0",  # For testing cookiecutter templates
  "ruff>=0.1.0",
  "mypy>=1.0.0",
  "pre-commit>=3.0.0",
]

[project.urls]
Documentation = "https://github.com/safurrier/cookiecutter-ai-conventions-experimental#readme"
Issues = "https://github.com/safurrier/cookiecutter-ai-conventions-experimental/issues"
Source = "https://github.com/safurrier/cookiecutter-ai-conventions-experimental"

[tool.hatch.version]
path = "src/cookiecutter_ai_conventions/__about__.py"

[tool.ruff]
target-version = "py39"
line-length = 88
exclude = [
  "{{cookiecutter.project_slug}}",  # Don't lint the template
]

[tool.ruff.lint]
select = [
  "E",   # pycodestyle errors
  "W",   # pycodestyle warnings
  "F",   # pyflakes
  "I",   # isort
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "UP",  # pyupgrade
]
ignore = [
  "E501",  # line too long (handled by formatter)
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
exclude = [
  "{{cookiecutter.project_slug}}",  # Don't type check the template
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
  "--cov=hooks",
  "--cov-report=term-missing",
  "--cov-report=html",
  "--cov-report=xml",
  "-v",
]

[tool.coverage.run]
source_pkgs = ["hooks"]
branch = true
parallel = true
omit = [
  "{{cookiecutter.project_slug}}/*",
]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]