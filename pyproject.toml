[project]
name = "cookiecutter-ai-conventions"
version = "0.1.0"
description = "A framework for growing your own AI coding conventions"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Sam Furrier", email = "safurrier@gmail.com"},
]
dependencies = [
    "cookiecutter>=2.1.0",
    "textual>=0.47.0",
    "pyyaml>=6.0",
    "click>=8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cookies>=0.6",
    "pytest-cov>=4.0",
    "coverage[toml]>=7.0",
    "ruff>=0.1.0",
    "pre-commit>=3.0",
    "mypy>=1.0",
    "types-PyYAML",
]

[tool.ruff]
target-version = "py38"
line-length = 100
extend-exclude = ["*cookiecutter*"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
]

[tool.coverage.run]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/hooks/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["."]
addopts = "-v"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
exclude = [
    "{{cookiecutter.project_slug}}",
    "test-output",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "mkdocs-material>=9.6.14",
    "mkdocstrings[python]>=0.26.1",
]
